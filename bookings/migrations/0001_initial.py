# Generated by Django 5.2.4 on 2025-10-07 22:00

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField()),
                ('notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('confirmed', 'Confirmada'), ('cancelled', 'Cancelada'), ('done', 'Atendida')], default='pending', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre completo')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Correo electrónico')),
                ('notes', models.TextField(blank=True, verbose_name='Notas adicionales')),
                ('preferences', models.TextField(blank=True, verbose_name='Preferencias')),
                ('services', models.TextField(blank=True, verbose_name='Servicios asociados')),
                ('available_days', models.JSONField(blank=True, null=True, verbose_name='Días disponibles')),
                ('active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.CharField(blank=True, max_length=120, verbose_name='Empresa / procedencia')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('duration_minutes', models.PositiveIntegerField(default=60)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre completo')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Correo electrónico')),
                ('notes', models.TextField(blank=True, verbose_name='Notas adicionales')),
                ('preferences', models.TextField(blank=True, verbose_name='Preferencias')),
                ('services', models.TextField(blank=True, verbose_name='Servicios asociados')),
                ('available_days', models.JSONField(blank=True, null=True, verbose_name='Días disponibles')),
                ('active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('role', models.CharField(max_length=80, verbose_name='Rol / puesto')),
                ('specialty', models.CharField(blank=True, max_length=120, verbose_name='Especialidad')),
                ('allow_multiple', models.BooleanField(default=True, verbose_name='Permitir citas simultáneas')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AppointmentStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(max_length=20)),
                ('new_status', models.CharField(max_length=20)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='bookings.appointment')),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='appointment',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookings.client'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('start', models.DateTimeField()),
                ('capacity', models.PositiveIntegerField(default=1)),
                ('allow_group_booking', models.BooleanField(default=False)),
                ('max_tickets_per_booking', models.PositiveIntegerField(default=1)),
                ('status', models.CharField(choices=[('active', 'Activo'), ('cancelled', 'Cancelado'), ('postponed', 'Reprogramado'), ('finished', 'Finalizado')], default='active', max_length=20)),
                ('organizer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('reference_event', models.ForeignKey(blank=True, help_text='Evento original si fue reprogramado', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rescheduled_versions', to='bookings.event')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bookings.eventtype')),
            ],
            options={
                'ordering': ['-start'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=50)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('cancelled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('confirmation_code', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='bookings.event')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookings.staff'),
        ),
        migrations.AddConstraint(
            model_name='event',
            constraint=models.CheckConstraint(condition=models.Q(('allow_group_booking', False), ('max_tickets_per_booking__gte', 1), _connector='OR'), name='valid_group_booking_limit'),
        ),
    ]
